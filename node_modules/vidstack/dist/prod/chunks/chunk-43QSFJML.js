import { sliderValueFormatContext } from './chunk-U43VNZZW.js';
import { SliderStoreFactory } from './chunk-53B74NMI.js';
import { round } from './chunk-CVLY5S52.js';
import { formatTime } from './chunk-JY53PGKC.js';
import { $$_create_walker, $$_insert_at_marker_lite, $$_create_template } from 'maverick.js/dom';
import { useStore, useContext, computed } from 'maverick.js';
import { defineElement, Component } from 'maverick.js/element';

var $$_templ = /* @__PURE__ */ $$_create_template(`<!$><span><!$></span>`);
var SliderValue = class extends Component {
  onAttach() {
    this.I = useStore(SliderStoreFactory);
    this.Cb = useContext(sliderValueFormatContext);
    this.ce = computed(this.Wg.bind(this));
  }
  Wg() {
    const { type, format, decimalPlaces, padHours, padMinutes, showHours } = this.$props;
    const { value: sliderValue, pointerValue, min, max } = this.I;
    const value = type() === "current" ? sliderValue() : pointerValue();
    if (format() === "percent") {
      const range = max() - min();
      const percent = value / range * 100;
      return (this.Cb.percent ?? round)(percent, decimalPlaces()) + "\uFE6A";
    } else if (format() === "time") {
      return (this.Cb.time ?? formatTime)(value, padHours(), padMinutes(), showHours());
    } else {
      return this.Cb.value?.(value) ?? value.toFixed(2);
    }
  }
  render() {
    return (() => {
      const [$$_root, $$_walker] = $$_create_walker($$_templ), $$_expr = $$_walker.nextNode();
      $$_insert_at_marker_lite($$_expr, this.ce);
      return $$_root;
    })();
  }
};
SliderValue.el = defineElement({
  tagName: "media-slider-value",
  props: {
    type: "current",
    format: void 0,
    showHours: false,
    padHours: false,
    padMinutes: false,
    decimalPlaces: 2
  }
});

export { SliderValue };
