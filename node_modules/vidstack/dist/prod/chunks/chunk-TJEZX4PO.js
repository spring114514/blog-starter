import { toggleButtonProps, ToggleButton } from './chunk-S6JBW74X.js';
import { $ariaBool } from './chunk-EVP5E6AO.js';
import { setARIALabel } from './chunk-HQQTSFXD.js';
import { useMedia } from './chunk-ZIBTY3GT.js';
import { Icon } from './chunk-OSS74BPE.js';
import { fullscreen_exit_default } from './chunk-UXSS3YXT.js';
import { fullscreen_default } from './chunk-A6X7WAFA.js';
import { $$_create_component } from 'maverick.js/dom';
import { defineElement } from 'maverick.js/element';

var FullscreenButton = class extends ToggleButton {
  constructor() {
    super(...arguments);
    this.na = "toggleFullscreen";
  }
  onAttach(el) {
    this.a = useMedia();
    this.v = this.V.bind(this);
    super.onAttach(el);
    setARIALabel(el, this.G.bind(this));
    const { fullscreen } = this.a.$store;
    this.setAttributes({
      "aria-hidden": $ariaBool(this.z.bind(this)),
      "data-fullscreen": fullscreen
    });
  }
  H(event) {
    const remote = this.a.remote, target = this.$props.target();
    this.v() ? remote.exitFullscreen(target, event) : remote.enterFullscreen(target, event);
  }
  V() {
    const { fullscreen } = this.a.$store;
    return fullscreen();
  }
  z() {
    const { canFullscreen } = this.a.$store;
    return !canFullscreen();
  }
  G() {
    const { fullscreen } = this.a.$store;
    return fullscreen() ? "Exit Fullscreen" : "Enter Fullscreen";
  }
  render() {
    return [
      $$_create_component(Icon, { paths: fullscreen_default, slot: "enter" }),
      $$_create_component(Icon, { paths: fullscreen_exit_default, slot: "exit" })
    ];
  }
};
FullscreenButton.el = defineElement({
  tagName: "media-fullscreen-button",
  props: {
    ...toggleButtonProps,
    target: "prefer-media"
  }
});

export { FullscreenButton };
